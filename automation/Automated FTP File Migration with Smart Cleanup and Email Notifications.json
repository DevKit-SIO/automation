{
  "id": 8161,
  "name": "Automated FTP File Migration with Smart Cleanup and Email Notifications",
  "views": 39,
  "recentViews": 2,
  "totalViews": 39,
  "createdAt": "2025-09-02T12:30:02.755Z",
  "description": "# Automated FTP File Migration with Smart Cleanup and Email Notifications\n\n## Overview\nThis n8n workflow automates the secure transfer of files between FTP servers on a scheduled basis, providing enterprise-grade reliability with comprehensive error handling and dual notification systems (email + webhook). Perfect for data migrations, automated backups, and multi-server file synchronization.\n\n## What it does\nThis workflow automatically discovers, filters, transfers, and safely removes files between FTP servers while maintaining complete audit trails and sending detailed notifications about every operation.\n\n**Key Features:**\n- **Scheduled Execution**: Configurable timing (daily, hourly, weekly, or custom cron expressions)\n- **Smart File Filtering**: Regex-based filtering by file type, size, date, or name patterns  \n- **Safe Transfer Protocol**: Downloads ‚Üí Uploads ‚Üí Validates ‚Üí Cleans up source\n- **Dual Notifications**: Email alerts + webhook integration for both success and errors\n- **Comprehensive Logging**: Detailed audit trail of all operations with timestamps\n- **Error Recovery**: Automatic retry logic with exponential backoff for network issues\n- **Production Ready**: Built-in safety measures and extensive documentation\n\n## Use Cases\n\n### üè¢ Enterprise & IT Operations\n- **Data Center Migration**: Moving files between different hosting environments\n- **Backup Automation**: Scheduled transfers to secondary storage locations  \n- **Multi-Site Synchronization**: Keeping files in sync across geographic locations\n- **Legacy System Integration**: Bridging old and new systems through automated transfers\n\n### üìä Business Operations  \n- **Document Management**: Automated transfer of contracts, reports, and business documents\n- **Media Asset Distribution**: Moving images, videos, and marketing materials between systems\n- **Data Pipeline**: Part of larger ETL processes for business intelligence\n- **Compliance Archiving**: Moving files to compliance-approved storage systems\n\n### üîß Development & DevOps\n- **Build Artifact Distribution**: Deploying compiled applications across environments  \n- **Configuration Management**: Synchronizing config files between servers\n- **Log File Aggregation**: Collecting logs from multiple servers for analysis\n- **Automated Deployment**: Moving release packages to production servers\n\n## How it works\n\n### üìã Workflow Steps\n1. **Schedule Trigger** ‚Üí Initiates workflow at specified intervals\n2. **File Discovery** ‚Üí Lists files from source FTP server with optional recursion\n3. **Smart Filtering** ‚Üí Applies customizable filters (type, size, date, name patterns)\n4. **Secure Download** ‚Üí Retrieves files to temporary n8n storage with retry logic\n5. **Safe Upload** ‚Üí Transfers files to destination with directory auto-creation\n6. **Transfer Validation** ‚Üí Verifies successful upload before proceeding\n7. **Source Cleanup** ‚Üí Removes original files only after confirmed success\n8. **Comprehensive Logging** ‚Üí Records all operations with detailed metadata\n9. **Dual Notifications** ‚Üí Sends email + webhook notifications for success/failure\n\n### üîÑ Error Handling Flow\n- **Network Issues** ‚Üí Automatic retry with exponential backoff (3 attempts)\n- **Authentication Problems** ‚Üí Immediate email alert with troubleshooting steps  \n- **Permission Errors** ‚Üí Detailed logging with recommended actions\n- **Disk Space Issues** ‚Üí Safe failure with source file preservation\n- **File Corruption** ‚Üí Integrity validation with rollback capability\n\n## Setup Requirements\n\n### üîë Credentials Needed\n1. **Source FTP Server**\n   - Host, port, username, password\n   - Read permissions required\n   - SFTP recommended for security\n\n2. **Destination FTP Server**  \n   - Host, port, username, password\n   - Write permissions required\n   - Directory creation permissions\n\n3. **SMTP Email Server**\n   - SMTP host and port (e.g., smtp.gmail.com:587)\n   - Authentication credentials\n   - For success and error notifications\n\n4. **Monitoring API** (Optional)\n   - Webhook URL for system integration\n   - Authentication tokens if required\n\n### ‚öôÔ∏è Configuration Steps\n1. **Import Workflow** ‚Üí Load the JSON template into your n8n instance\n2. **Configure Credentials** ‚Üí Set up all required FTP and SMTP connections\n3. **Customize Schedule** ‚Üí Adjust cron expression for your timing needs\n4. **Set File Filters** ‚Üí Configure regex patterns for your file types\n5. **Configure Paths** ‚Üí Set source and destination directory structures\n6. **Test Thoroughly** ‚Üí Run with test files before production deployment\n7. **Enable Monitoring** ‚Üí Activate email notifications and logging\n\n## Customization Options\n\n### üìÖ Scheduling Examples\n```cron\n0 2 * * *     # Daily at 2 AM\n0 */6 * * *   # Every 6 hours  \n0 8 * * 1-5   # Weekdays at 8 AM\n0 0 1 * *     # Monthly on 1st\n*/15 * * * *  # Every 15 minutes\n```\n\n### üîç File Filter Patterns\n```regex\n# Documents\n\\\\.(pdf|doc|docx|xls|xlsx)$\n\n# Images  \n\\\\.(jpg|jpeg|png|gif|svg)$\n\n# Data Files\n\\\\.(csv|json|xml|sql)$\n\n# Archives\n\\\\.(zip|rar|7z|tar|gz)$\n\n# Size-based (add as condition)\n{{ $json.size &gt; 1048576 }}  # Files &gt; 1MB\n\n# Date-based (recent files only)\n{{ $json.date &gt; $now.minus({days: 7}) }}\n```\n\n### üìÅ Directory Organization\n```javascript\n// Date-based structure\n/files/{{ $now.format('YYYY/MM/DD') }}/\n\n// Type-based structure  \n/files/{{ $json.name.split('.').pop() }}/\n\n// User-based structure\n/users/{{ $json.owner || 'system' }}/\n\n// Hybrid approach\n/{{ $now.format('YYYY-MM') }}/{{ $json.type }}/\n```\n\n## Template Features\n\n### üõ°Ô∏è Safety & Security\n- **Transfer Validation**: Confirms successful upload before source deletion\n- **Error Preservation**: Source files remain intact on any failure\n- **Audit Trail**: Complete logging of all operations with timestamps\n- **Credential Security**: Secure storage using n8n's credential system\n- **SFTP Support**: Encrypted transfers when available\n- **Retry Logic**: Automatic recovery from transient network issues\n\n### üìß Notification System\n**Success Notifications:**\n- Confirmation email with transfer details\n- File metadata (name, size, transfer time)\n- Next scheduled execution information\n- Webhook payload for monitoring systems\n\n**Error Notifications:**\n- Immediate email alerts with error details\n- Troubleshooting steps and recommendations\n- Failed file information for manual intervention\n- Webhook integration for incident management\n\n### üìä Monitoring & Analytics\n- **Execution Logs**: Detailed history of all workflow runs\n- **Performance Metrics**: Transfer speeds and success rates\n- **Error Tracking**: Categorized failure analysis\n- **Audit Reports**: Compliance-ready activity logs\n\n## Production Considerations\n\n### üöÄ Performance Optimization\n- **File Size Limits**: Configure timeouts based on expected file sizes\n- **Batch Processing**: Handle multiple files efficiently\n- **Network Optimization**: Schedule transfers during off-peak hours\n- **Resource Monitoring**: Track n8n server CPU, memory, and disk usage\n\n### üîß Maintenance\n- **Regular Testing**: Validate credentials and connectivity\n- **Log Review**: Monitor for patterns in errors or performance\n- **Credential Rotation**: Update passwords and keys regularly\n- **Documentation Updates**: Keep configuration notes current\n\n\n## Testing Protocol\n\n### üß™ Pre-Production Testing\n1. **Phase 1**: Test with 1-2 small files (&lt; 1MB)\n2. **Phase 2**: Test error scenarios (invalid credentials, network issues)\n3. **Phase 3**: Test with representative file sizes and volumes\n4. **Phase 4**: Validate email notifications and logging\n5. **Phase 5**: Full production deployment with monitoring\n\n### ‚ö†Ô∏è Important Testing Notes\n- **Disable Source Deletion** during initial testing\n- Use **test directories** to avoid production data impact\n- **Monitor execution logs** carefully during testing\n- **Validate email delivery** to ensure notifications work\n- **Test rollback procedures** before production use\n\n## Support & Documentation\n\nThis template includes:\n- **8 Comprehensive Sticky Notes** with visual documentation\n- **Detailed Node Comments** explaining every configuration option\n- **Error Handling Guide** with common troubleshooting steps\n- **Security Best Practices** for production deployment\n- **Performance Tuning** recommendations for different scenarios\n\n## Technical Specifications\n\n- **n8n Version**: 1.0.0+  \n- **Node Count**: 17 functional nodes + 8 documentation sticky notes\n- **Execution Time**: 2-10 minutes (depending on file sizes and network speed)\n- **Memory Usage**: 50-200MB (scales with file sizes)\n- **Supported Protocols**: FTP, SFTP (recommended)\n- **File Size Limit**: Up to 150MB per file (configurable)\n- **Concurrent Files**: Processes files sequentially for stability\n\n## Who is this for?\n\n### üéØ Primary Users\n- **System Administrators** managing file transfers between servers\n- **DevOps Engineers** automating deployment and backup processes  \n- **IT Operations Teams** handling data migration projects\n- **Business Process Owners** requiring automated file management\n\n### üíº Industries & Use Cases\n- **Healthcare**: Patient data archiving and compliance reporting\n- **Financial Services**: Secure document transfer and regulatory reporting\n- **Manufacturing**: CAD file distribution and inventory data sync\n- **E-commerce**: Product image and catalog management\n- **Media**: Asset distribution and content delivery automation\n\n",
  "workflow": {
    "id": "DaJFVETQef5qJMmB",
    "meta": {
      "instanceId": "ade915387b18f7a3b9a14fd8fb677fdbace0ade794de7914e8790d907cd285d0",
      "templateCredsSetupCompleted": true
    },
    "name": "My workflow 2",
    "tags": [],
    "nodes": [
      {
        "id": "dafe14b7-7719-41b7-b1a4-cf6765aa3db9",
        "name": "Sticky Note",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          -320,
          -144
        ],
        "parameters": {
          "width": 400,
          "height": 712,
          "content": "# üöÄ FTP FILE MIGRATION WORKFLOW\n\n## Overview:\nAutomated file transfer between FTP servers with comprehensive error handling and notifications.\n\n## Key Features:\n‚úÖ Scheduled execution (daily at 2 AM)\n‚úÖ Smart file filtering\n‚úÖ Secure transfer with validation\n‚úÖ Source cleanup after success\n‚úÖ Email notifications (success + error)\n‚úÖ Comprehensive logging\n\n## Quick Start:\n1. Configure FTP credentials\n2. Adjust schedule and filters\n3. Set up email notifications\n4. Test with small files first\n5. Monitor execution logs\n\n‚ö†Ô∏è **IMPORTANT**: Test thoroughly before production!"
        },
        "typeVersion": 1
      },
      {
        "id": "f460e190-0e9f-4fb9-b023-2b4d37988a37",
        "name": "File Processing",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          608,
          144
        ],
        "parameters": {
          "width": 380,
          "height": 280,
          "content": "## üìÅ FILE PROCESSING PIPELINE\n\n### Current Filter: \n**Text & Data Files Only**\n- .txt, .csv, .json, .xml\n\n### Common Alternatives:\nüìÑ **Documents**: `\\.(pdf|doc|docx)$`\nüñºÔ∏è **Images**: `\\.(jpg|jpeg|png|gif)$`\nüìä **Data**: `\\.(csv|json|xml|xlsx)$`\nüì¶ **Archives**: `\\.(zip|rar|7z|tar)$`\nüéµ **Media**: `\\.(mp4|mp3|avi|mov)$`\n\n### Size Limits:\n- Small: < 10MB\n- Medium: 10MB - 100MB  \n- Large: > 100MB (adjust timeouts)\n\n### Processing Order:\n1Ô∏è‚É£ List files from source\n2Ô∏è‚É£ Filter by criteria\n3Ô∏è‚É£ Download to temp storage\n4Ô∏è‚É£ Upload to destination\n5Ô∏è‚É£ Validate transfer\n6Ô∏è‚É£ Clean up source\n\nüîÑ **Remove Filter node to transfer ALL files**"
        },
        "typeVersion": 1
      },
      {
        "id": "d92ebb39-8697-4137-8770-dddf0cc3412a",
        "name": "Security",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          -304,
          592
        ],
        "parameters": {
          "width": 382,
          "height": 792,
          "content": "## üîí SECURITY BEST PRACTICES\n\n### Connection Security:\nüîê **Use SFTP** instead of FTP (port 22)\nüîë **SSH Keys** preferred over passwords\nüåê **IP Whitelisting** on FTP servers\nüîí **VPN/Tunnel** for sensitive data\n\n### Credential Management:\nüóùÔ∏è **Dedicated Service Accounts**\nüîÑ **Regular Rotation** (monthly/quarterly)\nüìù **Minimum Permissions** (read source, write dest)\nüö´ **No Shared Accounts**\n\n### Data Protection:\nüîê **Encryption in Transit** (TLS/SSL)\nüóÇÔ∏è **File Integrity Checks** (checksums)\nüìã **Audit Logging** (all operations)\nüïê **Retention Policies** (log cleanup)\n\n### Access Control:\nüë§ **Role-Based Access**\nüö™ **Principle of Least Privilege**\nüìä **Access Reviews** (quarterly)\nüîç **Activity Monitoring**\n\n### Compliance:\nüìú **GDPR/CCPA** considerations\nüìã **SOX/HIPAA** requirements\nüè¢ **Corporate Policies**\nüìù **Documentation Requirements**"
        },
        "typeVersion": 1
      },
      {
        "id": "42886faa-e0ec-4ccc-9bcf-fa289f27fea7",
        "name": "Performance",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          128,
          -144
        ],
        "parameters": {
          "width": 444,
          "height": 568,
          "content": "## ‚ö° PERFORMANCE OPTIMIZATION\n\n### File Size Considerations:\nüìÑ **Small Files** (< 10MB): Default settings\nüìä **Medium Files** (10-100MB): Increase timeouts\nüì¶ **Large Files** (> 100MB): Extended timeouts + monitoring\nüé¨ **Huge Files** (> 1GB): Consider alternative methods\n\n### Timeout Settings:\n‚è∞ **Connection**: 30 seconds\n‚è∞ **Download**: 300 seconds (5 min)\n‚è∞ **Upload**: 300 seconds (5 min)\n‚è∞ **Large Files**: 600+ seconds (10+ min)\n\n### Network Optimization:\nüåê **Peak Hours**: Schedule during off-peak\nüìä **Bandwidth**: Monitor usage patterns\nüîÑ **Parallel Processing**: For multiple files\nüìà **Resume Support**: For interrupted transfers\n\n\n\nüéØ **Target**: < 5 min per 100MB file"
        },
        "typeVersion": 1
      },
      {
        "id": "51afbebf-2431-4d08-bd8e-74c0a9072eb1",
        "name": "Troubleshooting",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          2304,
          -128
        ],
        "parameters": {
          "width": 480,
          "height": 912,
          "content": "## üîß TROUBLESHOOTING GUIDE\n\n### Common Issues & Solutions:\n\nüîå **Connection Failures:**\n- Check server status & firewall\n- Verify credentials & permissions\n- Test network connectivity\n- Review SSL/TLS settings\n\n‚è±Ô∏è **Timeout Errors:**\n- Increase timeout values\n- Check file sizes vs. settings\n- Monitor network speed\n- Split large transfers\n\nüîë **Authentication Issues:**\n- Verify username/password\n- Check account lockouts\n- Test credential expiration\n- Review permission changes\n\nüìÅ **File Operation Errors:**\n- Confirm file existence\n- Check read/write permissions\n- Verify disk space availability\n- Test file locking status\n\nüíæ **Memory/Performance:**\n- Monitor n8n server resources\n- Adjust concurrent executions\n- Implement file size limits\n- Consider batch processing\n\n### Debug Steps:\n1Ô∏è‚É£ **Check Logs**: Execution history\n2Ô∏è‚É£ **Test Credentials**: Manual FTP connection\n3Ô∏è‚É£ **Verify Paths**: Directory structure\n4Ô∏è‚É£ **Network Test**: Ping/telnet servers\n5Ô∏è‚É£ **Resource Check**: CPU/Memory/Disk\n\nüìû **Escalation**: Contact system administrators"
        },
        "typeVersion": 1
      },
      {
        "id": "d57222c3-5f3b-45ec-8410-3f49675bdf9b",
        "name": "Configuration",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          1136,
          96
        ],
        "parameters": {
          "width": 380,
          "height": 320,
          "content": "## ‚öôÔ∏è CONFIGURATION CHECKLIST\n\n### Pre-Deployment:\n‚òê **FTP Credentials**: Source & destination tested\n‚òê **SMTP Settings**: Email notifications configured\n‚òê **File Filters**: Appropriate patterns set\n‚òê **Paths**: Source & destination directories verified\n‚òê **Schedule**: Cron expression configured\n‚òê **Timeouts**: Adjusted for expected file sizes\n‚òê **Permissions**: Read source, write destination\n‚òê **Network**: Connectivity between all systems\n\n### Testing Phase:\n‚òê **Disable Cleanup**: Comment out source deletion\n‚òê **Small Files**: Test with 1-2 small files first\n‚òê **Error Scenarios**: Test failure conditions\n‚òê **Email Alerts**: Verify notifications work\n‚òê **Logs Review**: Check execution history\n‚òê **Performance**: Monitor transfer speeds\n\n### Production Deployment:\n‚òê **Enable Cleanup**: Activate source deletion\n‚òê **Monitor First Run**: Watch initial execution\n‚òê **Set Alerts**: Configure monitoring thresholds\n‚òê **Document Config**: Save settings & passwords\n‚òê **Schedule Review**: Confirm timing works\n‚òê **Backup Strategy**: Plan for rollback\n\n### Post-Deployment:\n‚òê **Daily Monitoring**: Check success rates\n‚òê **Weekly Reviews**: Analyze performance\n‚òê **Monthly Audits**: Security & compliance\n‚òê **Quarterly Updates**: Credential rotation"
        },
        "typeVersion": 1
      },
      {
        "id": "fd89ccc8-f083-4241-a869-dca7690bc591",
        "name": "Daily Schedule (2 AM)",
        "type": "n8n-nodes-base.scheduleTrigger",
        "notes": "SCHEDULE TRIGGER CONFIGURATION:\n\nüìÖ CURRENT SCHEDULE: Daily at 2:00 AM (server time)\n\n‚è∞ SCHEDULE EXAMPLES:\n- Daily at specific time: 0 2 * * *\n- Every 6 hours: 0 */6 * * *\n- Weekdays at 8 AM: 0 8 * * 1-5\n- Weekly on Sunday 2 AM: 0 2 * * 0\n- Monthly on 1st at midnight: 0 0 1 * *\n\nüîß CONFIGURATION STEPS:\n1. Click on this node to edit\n2. Modify 'Cron Expression' field\n3. Use cron expression generator if needed\n4. Test with 'Execute Node' button\n\n‚ö†Ô∏è IMPORTANT CONSIDERATIONS:\n- Server timezone affects execution time\n- Consider maintenance windows\n- Avoid peak business hours\n- Account for server load and resources\n- Plan for daylight saving time changes\n\nüí° TESTING TIP:\n- Use '*/5 * * * *' for every 5 minutes during testing\n- Change back to production schedule after validation\n\nüåç TIMEZONE SETTINGS:\n- Current: Europe/Warsaw (GMT+1/+2)\n- Modify in workflow settings if needed\n- Ensure consistency across all environments",
        "position": [
          288,
          512
        ],
        "parameters": {
          "rule": {
            "interval": [
              {
                "field": "cronExpression",
                "expression": "0 2 * * *"
              }
            ]
          }
        },
        "typeVersion": 1
      },
      {
        "id": "0be802db-9255-45b5-8c93-ca85087969e5",
        "name": "List Files - Source FTP",
        "type": "n8n-nodes-base.ftp",
        "notes": "SOURCE FTP SERVER CONFIGURATION:\n\nüîë CREDENTIALS SETUP:\n1. Navigate to: Settings ‚Üí Credentials ‚Üí Create New\n2. Select 'FTP' credential type\n3. Name: 'Source FTP Server'\n4. Enter connection details:\n   - Host: source-ftp-server.com\n   - Port: 21 (FTP) or 22 (SFTP)\n   - Username: your_username\n   - Password: your_password\n5. Test connection before saving\n\nüìÅ PATH CONFIGURATION:\n- Absolute path: /home/user/files/\n- Relative path: files/folder/\n- Root directory: /\n- Current example: /source/directory/\n\nüîç OPERATION SETTINGS:\n- Operation: 'List' (to discover files)\n- Recursive: true (includes subdirectories)\n- Returns file metadata: name, size, date, permissions\n\n‚öôÔ∏è ADVANCED OPTIONS:\n- Connection timeout: 30 seconds (default)\n- Data timeout: 60 seconds\n- Keep connection alive: true\n- Passive mode: true (recommended)\n\nüõ°Ô∏è SECURITY RECOMMENDATIONS:\n- Use SFTP (port 22) when possible\n- Enable key-based authentication\n- Implement IP whitelisting\n- Use dedicated service accounts\n- Regular credential rotation\n\nüêõ TROUBLESHOOTING:\n- Connection timeout: Check firewall settings\n- Permission denied: Verify user permissions\n- Path not found: Ensure directory exists\n- Authentication failed: Check credentials\n\nüìä EXPECTED OUTPUT:\n- Array of file objects\n- Each object contains: name, size, date, type\n- Empty array if no files found",
        "position": [
          512,
          512
        ],
        "parameters": {
          "path": "/source/directory/",
          "options": {}
        },
        "typeVersion": 1
      },
      {
        "id": "0915fba4-e8a7-4070-bfe6-03d594163495",
        "name": "Filter Files",
        "type": "n8n-nodes-base.filter",
        "notes": "FILE FILTERING & SELECTION:\n\nüîç CURRENT FILTER LOGIC:\n- File Extension Match: \\.(txt|csv|json|xml)$\n- Case-sensitive matching enabled\n- Regex pattern matching\n\nüìù COMMON FILTER PATTERNS:\n\nüìÑ DOCUMENTS:\n- Office files: \\.(doc|docx|xls|xlsx|ppt|pptx)$\n- PDF files: \\.pdf$\n- Text files: \\.(txt|rtf|md)$\n\nüñºÔ∏è IMAGES:\n- Common formats: \\.(jpg|jpeg|png|gif|bmp)$\n- High-res images: \\.(tiff|tga|raw)$\n- Vector graphics: \\.(svg|eps|ai)$\n\nüìä DATA FILES:\n- Structured data: \\.(csv|json|xml|yaml)$\n- Database files: \\.(sql|db|sqlite)$\n- Log files: \\.(log|txt)$\n\nüì¶ ARCHIVES:\n- Compressed files: \\.(zip|rar|7z|tar|gz)$\n\nüîß ADVANCED FILTERING OPTIONS:\n\nüìè SIZE-BASED FILTERING:\n- Add condition: {{ $json.size > 1048576 }} (> 1MB)\n- Small files only: {{ $json.size < 10240 }} (< 10KB)\n- Size range: {{ $json.size >= 1024 && $json.size <= 5242880 }}\n\nüìÖ DATE-BASED FILTERING:\n- Recent files: {{ $json.date > $now.minus({days: 7}) }}\n- Older files: {{ $json.date < $now.minus({months: 1}) }}\n- Specific date range: Use date comparisons\n\nüìõ NAME PATTERN FILTERING:\n- Starts with: ^report_.*\n- Ends with: .*_backup$\n- Contains: .*important.*\n- Exclude pattern: ^(?!temp_).*\n\n‚ö†Ô∏è FILTER BYPASS:\n- Remove this node to transfer ALL files\n- Be cautious with unrestricted transfers\n- Consider disk space and bandwidth\n\nüéØ TESTING FILTERS:\n1. Use 'Execute Node' to test filter logic\n2. Check output to verify correct files selected\n3. Adjust regex patterns as needed\n4. Validate with different file types\n\nüí° PERFORMANCE TIP:\n- Specific filters reduce processing time\n- Avoid overly complex regex patterns\n- Test filters with representative data",
        "position": [
          736,
          512
        ],
        "parameters": {
          "options": {},
          "conditions": {
            "options": {
              "leftValue": "",
              "caseSensitive": true,
              "typeValidation": "strict"
            },
            "combinator": "and",
            "conditions": [
              {
                "id": "file-filter-condition",
                "operator": {
                  "type": "string",
                  "operation": "regex"
                },
                "leftValue": "={{ $json.name }}",
                "rightValue": "\\.(txt|csv|json|xml)$"
              }
            ]
          }
        },
        "typeVersion": 2
      },
      {
        "id": "76837f02-91d3-47f9-aa45-4814c8fd32d1",
        "name": "Download File",
        "type": "n8n-nodes-base.ftp",
        "notes": "FILE DOWNLOAD OPERATION:\n\nüì• DOWNLOAD CONFIGURATION:\n- Operation: 'Download File'\n- Binary Property: 'file_data' (stores file content)\n- Dynamic path: {{ $json.name }} (from previous node)\n- Uses same credentials as listing operation\n\nüéØ IMPORTANT SETTINGS:\n- Path Expression: {{ $json.name }}\n- Binary Data Property: file_data\n- Timeout: 300 seconds (5 minutes)\n- Auto-retry: 3 attempts on failure\n\nüìä PERFORMANCE CONSIDERATIONS:\n\n‚è±Ô∏è TIMEOUT SETTINGS:\n- Small files (<10MB): Default timeout (60s)\n- Medium files (10MB-100MB): 300 seconds\n- Large files (>100MB): 600+ seconds\n- Adjust based on network speed\n\nüóÇÔ∏è FILE SIZE LIMITS:\n- n8n default: 150MB per execution\n- Large files may cause memory issues\n- Consider file size filtering\n- Split large transfers into batches\n\nüîÑ RETRY LOGIC:\n- Automatic retry on network errors\n- 3 attempts with exponential backoff\n- Preserves original file on failure\n- Error details logged for debugging\n\nüíæ MEMORY MANAGEMENT:\n- Files stored in n8n temporary memory\n- Automatic cleanup after workflow completion\n- Monitor server RAM usage for large files\n- Consider streaming for very large files\n\n‚ö†Ô∏è ERROR SCENARIOS:\n- Network interruption: Auto-retry enabled\n- File permissions: Check source server access\n- File locked: Retry after delay\n- Disk space: Monitor n8n server storage\n- Timeout: Increase timeout for large files\n\nüîç MONITORING:\n- Check execution logs for download times\n- Monitor network bandwidth usage\n- Track success/failure rates\n- Set up alerts for repeated failures\n\nüõ†Ô∏è TROUBLESHOOTING:\n- Download fails: Check file permissions\n- Slow downloads: Verify network speed\n- Timeout errors: Increase timeout setting\n- Memory errors: Reduce batch size or file size limit\n\nüìà OUTPUT DATA:\n- Binary data stored in 'file_data' property\n- Original filename preserved\n- File metadata available for next nodes\n- Ready for upload to destination server",
        "position": [
          960,
          512
        ],
        "parameters": {
          "path": "={{ $json.name }}",
          "options": {},
          "binaryPropertyName": "file_data"
        },
        "typeVersion": 1
      },
      {
        "id": "cee66200-dd84-4a31-b00b-81935cff7e86",
        "name": "Upload to Destination",
        "type": "n8n-nodes-base.ftp",
        "notes": "DESTINATION FTP UPLOAD:\n\nüéØ UPLOAD CONFIGURATION:\n- Operation: 'Upload File'\n- Source: Binary data from 'file_data' property\n- Dynamic destination path with filename preservation\n- Automatic directory creation enabled\n\nüîë CREDENTIALS SETUP:\n1. Create separate FTP credential: 'Destination FTP Server'\n2. Verify write permissions on target server\n3. Test connectivity before production use\n4. Use different credentials than source for security\n\nüìÅ PATH STRUCTURE EXAMPLES:\n\nüóÇÔ∏è PRESERVE ORIGINAL STRUCTURE:\n/destination/directory/{{ $json.name }}\n\nüìÖ DATE-BASED ORGANIZATION:\n/files/{{ $now.format('YYYY/MM/DD') }}/{{ $json.name }}\n\nüìä TYPE-BASED ORGANIZATION:\n/files/{{ $json.name.split('.').pop() }}/{{ $json.name }}\n\nüë§ USER-BASED ORGANIZATION:\n/users/{{ $json.owner || 'system' }}/{{ $json.name }}\n\n‚öôÔ∏è UPLOAD OPTIONS:\n\n‚úÖ ENABLED FEATURES:\n- createDirectories: true (auto-create missing folders)\n- preserveTimestamp: true (maintain original dates)\n- overwriteExisting: false (prevent accidental overwrites)\n\nüîÑ ADDITIONAL OPTIONS:\n- Resume broken uploads: true\n- Verify after upload: true\n- Atomic upload: true (temp file ‚Üí rename)\n- Permission setting: 644 (read/write owner, read others)\n\nüõ°Ô∏è SECURITY MEASURES:\n- Separate credentials for source/destination\n- Write-only permissions where possible\n- Regular credential rotation\n- Audit trail maintenance\n\n‚ö° PERFORMANCE OPTIMIZATION:\n- Parallel uploads for multiple files\n- Compression for large text files\n- Resume capability for interrupted transfers\n- Bandwidth limiting for peak hours\n\nüéØ SUCCESS VALIDATION:\n- File existence check after upload\n- Size comparison (source vs destination)\n- Checksum verification (optional)\n- Timestamp preservation validation\n\n‚ö†Ô∏è ERROR SCENARIOS & SOLUTIONS:\n- Disk full: Monitor destination storage\n- Permission denied: Verify write access\n- Connection lost: Auto-retry with backoff\n- Filename conflicts: Use unique naming\n\nüìä MONITORING METRICS:\n- Upload speed (MB/s)\n- Success rate percentage\n- Average file size\n- Total data transferred\n- Error frequency and types\n\nüîß TROUBLESHOOTING GUIDE:\n- Upload fails: Check destination permissions\n- Slow uploads: Verify network connectivity\n- Directory errors: Ensure path format is correct\n- Authentication issues: Validate credentials\n- File corruption: Enable checksum verification\n\nüìà OUTPUT INFORMATION:\n- Upload success status\n- Destination file path\n- Transfer duration\n- File size confirmation\n- Any warnings or errors",
        "position": [
          1184,
          512
        ],
        "parameters": {
          "path": "/destination/directory/{{ $json.name }}",
          "options": {},
          "binaryPropertyName": "file_data"
        },
        "typeVersion": 1
      },
      {
        "id": "df6e949f-839e-4ab5-80c8-243b16409720",
        "name": "Upload Success?",
        "type": "n8n-nodes-base.filter",
        "notes": "SUCCESS VALIDATION:\n\nCHECKS PERFORMED:\n- Upload operation success status\n- File transfer completion\n- No error conditions\n\nNEXT STEPS:\n- TRUE: Proceed to cleanup (delete source)\n- FALSE: Route to error handling\n\nADDITIONAL VALIDATIONS:\n- File size comparison\n- Checksum verification\n- Timestamp validation\n\nCONFIGURATION:\n- Adjust condition based on FTP node output\n- May need to check different properties\n- Test with actual transfer results",
        "position": [
          1408,
          512
        ],
        "parameters": {
          "options": {},
          "conditions": {
            "options": {
              "version": 1,
              "leftValue": "",
              "caseSensitive": true,
              "typeValidation": "strict"
            },
            "combinator": "and",
            "conditions": [
              {
                "id": "success-condition",
                "operator": {
                  "type": "boolean",
                  "operation": "equal"
                },
                "leftValue": "={{ $json.success }}",
                "rightValue": true
              }
            ]
          }
        },
        "typeVersion": 2
      },
      {
        "id": "8e3a057f-f21c-4129-a43d-17960b58b26a",
        "name": "Delete Source File",
        "type": "n8n-nodes-base.ftp",
        "notes": "SOURCE FILE CLEANUP:\n\nOPERATION: DELETE\n- Removes file from source server\n- Only after successful upload\n- Prevents duplicate processing\n\nSAFETY MEASURES:\n- Only runs after upload verification\n- Maintains transfer logs\n- Consider backup retention period\n\nALTERNATIVE STRATEGIES:\n1. MOVE to 'processed' folder instead of delete\n2. RENAME with timestamp suffix\n3. ARCHIVE to compressed format\n\nRISK MITIGATION:\n- Test thoroughly before production\n- Implement rollback procedures\n- Monitor deletion operations\n\nIMPORTANT: Disable this step for testing!",
        "position": [
          1632,
          512
        ],
        "parameters": {
          "path": "={{ $json.name }}",
          "options": {}
        },
        "typeVersion": 1
      },
      {
        "id": "4c15a875-60ab-462e-a780-1e50337f7ca3",
        "name": "Log Success",
        "type": "n8n-nodes-base.set",
        "notes": "SUCCESS LOGGING:\n\nLOG FIELDS:\n- Timestamp: ISO format with timezone\n- Filename: Original file name\n- Status: SUCCESS indicator\n- File Size: In bytes for monitoring\n- Operation: Type of migration performed\n\nLOGGING ENHANCEMENTS:\n- Add source/destination server info\n- Include transfer duration\n- Record file checksums\n- Track user/process info\n\nOUTPUT OPTIONS:\n1. Database logging (add database node)\n2. File logging (append to CSV/JSON)\n3. External API (webhook notification)\n4. Email notifications\n\nMONITORING:\n- Use for operational dashboards\n- Generate migration reports\n- Track performance metrics",
        "position": [
          1856,
          512
        ],
        "parameters": {
          "options": {},
          "assignments": {
            "assignments": [
              {
                "id": "log-timestamp",
                "name": "timestamp",
                "type": "string",
                "value": "={{ $now.format('YYYY-MM-DD HH:mm:ss') }}"
              },
              {
                "id": "log-filename",
                "name": "filename",
                "type": "string",
                "value": "={{ $json.name }}"
              },
              {
                "id": "log-status",
                "name": "status",
                "type": "string",
                "value": "SUCCESS"
              },
              {
                "id": "log-filesize",
                "name": "file_size_bytes",
                "type": "number",
                "value": "={{ $json.size }}"
              },
              {
                "id": "log-operation",
                "name": "operation",
                "type": "string",
                "value": "MIGRATE_AND_DELETE"
              }
            ]
          }
        },
        "typeVersion": 3.4
      },
      {
        "id": "18f4a55b-d5d5-4c44-8116-70614e4b01c6",
        "name": "Send Email Success Alert",
        "type": "n8n-nodes-base.emailSend",
        "notes": "EMAIL SUCCESS NOTIFICATION:\n\nüìß SUCCESS NOTIFICATION SETTINGS:\n- Sends confirmation email for successful transfers\n- Includes transfer details and file information\n- Uses same SMTP credentials as error notifications\n- Helps maintain audit trail of all operations\n\n‚úÖ EMAIL CONTENT:\n- Timestamp of successful completion\n- Filename and size of transferred file\n- Operation type and status confirmation\n- Summary of all workflow steps completed\n\nüì¨ NOTIFICATION FREQUENCY:\n- One email per successful file transfer\n- Can be modified to send daily/weekly summaries\n- Consider batch notifications for high-volume transfers\n\n‚öôÔ∏è CUSTOMIZATION OPTIONS:\n\nüìä SUMMARY REPORTS:\n- Change to HTML format for better presentation\n- Include charts or statistics\n- Add file thumbnails for images\n- Include transfer speed metrics\n\nüìù CONTENT MODIFICATIONS:\n- Add recipient-specific information\n- Include business context or next steps\n- Add links to file locations\n- Include compliance or audit information\n\nüë• RECIPIENT MANAGEMENT:\n- Multiple recipients with CC/BCC\n- Different notifications for different teams\n- Role-based notification content\n- Escalation for VIP files or large transfers\n\nüîï NOTIFICATION CONTROL:\n- Add conditions to skip notifications for certain files\n- Time-based notification suppression (e.g., only during business hours)\n- File size thresholds for notifications\n- Success rate thresholds (only notify if multiple successes)\n\nüìà REPORTING INTEGRATION:\n- Can feed into business intelligence systems\n- Generate compliance reports\n- Track SLA compliance\n- Monitor operational efficiency\n\nNOTE: For high-volume environments, consider implementing batch notifications to avoid email flooding",
        "position": [
          2080,
          512
        ],
        "webhookId": "aef3fd9a-2a48-4e76-9900-5a48015a67cf",
        "parameters": {
          "options": {
            "allowUnauthorizedCerts": false
          },
          "subject": "‚úÖ FTP Migration Success - {{ $now.format('YYYY-MM-DD HH:mm') }}",
          "toEmail": "admin@yourcompany.com",
          "fromEmail": "noreply@yourcompany.com"
        },
        "typeVersion": 2.1
      }
    ],
    "active": false,
    "pinData": {},
    "settings": {
      "executionOrder": "v1"
    },
    "versionId": "ff89656f-95ee-4c16-a998-16763e6a5b23",
    "connections": {
      "Log Success": {
        "main": [
          [
            {
              "node": "Send Email Success Alert",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Filter Files": {
        "main": [
          [
            {
              "node": "Download File",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Download File": {
        "main": [
          [
            {
              "node": "Upload to Destination",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Upload Success?": {
        "main": [
          [
            {
              "node": "Delete Source File",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Delete Source File": {
        "main": [
          [
            {
              "node": "Log Success",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Daily Schedule (2 AM)": {
        "main": [
          [
            {
              "node": "List Files - Source FTP",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Upload to Destination": {
        "main": [
          [
            {
              "node": "Upload Success?",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "List Files - Source FTP": {
        "main": [
          [
            {
              "node": "Filter Files",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Send Email Success Alert": {
        "main": [
          []
        ]
      }
    }
  },
  "lastUpdatedBy": 29,
  "workflowInfo": {
    "nodeCount": 15,
    "nodeTypes": {
      "n8n-nodes-base.ftp": {
        "count": 4
      },
      "n8n-nodes-base.set": {
        "count": 1
      },
      "n8n-nodes-base.filter": {
        "count": 2
      },
      "n8n-nodes-base.emailSend": {
        "count": 1
      },
      "n8n-nodes-base.stickyNote": {
        "count": 6
      },
      "n8n-nodes-base.scheduleTrigger": {
        "count": 1
      }
    }
  },
  "user": {
    "name": "Dariusz Koryto",
    "username": "dako",
    "bio": "",
    "verified": true,
    "links": [
      "https://www.linkedin.com/in/dariuszkoryto/"
    ],
    "avatar": "https://gravatar.com/avatar/1242bd3bd2da35688dc9222b7f5d223967fae429e52c7645677f2fc63349dd0f?r=pg&d=retro&size=200"
  },
  "nodes": [
    {
      "id": 11,
      "icon": "fa:envelope",
      "name": "n8n-nodes-base.emailSend",
      "codex": {
        "data": {
          "alias": [
            "SMTP",
            "email",
            "human",
            "form",
            "wait",
            "hitl",
            "approval"
          ],
          "resources": {
            "generic": [
              {
                "url": "https://n8n.io/blog/2021-the-year-to-automate-the-new-you-with-n8n/",
                "icon": "‚òÄÔ∏è",
                "label": "2021: The Year to Automate the New You with n8n"
              },
              {
                "url": "https://n8n.io/blog/build-your-own-virtual-assistant-with-n8n-a-step-by-step-guide/",
                "icon": "üë¶",
                "label": "Build your own virtual assistant with n8n: A step by step guide"
              }
            ],
            "primaryDocumentation": [
              {
                "url": "https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.sendemail/"
              }
            ],
            "credentialDocumentation": [
              {
                "url": "https://docs.n8n.io/integrations/credentials/sendemail/"
              }
            ]
          },
          "categories": [
            "Communication",
            "HITL",
            "Core Nodes"
          ],
          "nodeVersion": "1.0",
          "codexVersion": "1.0",
          "subcategories": {
            "HITL": [
              "Human in the Loop"
            ]
          }
        }
      },
      "group": "[\"output\"]",
      "defaults": {
        "name": "Send Email",
        "color": "#00bb88"
      },
      "iconData": {
        "icon": "envelope",
        "type": "icon"
      },
      "displayName": "Send Email",
      "typeVersion": 2,
      "nodeCategories": [
        {
          "id": 6,
          "name": "Communication"
        },
        {
          "id": 9,
          "name": "Core Nodes"
        },
        {
          "id": 28,
          "name": "HITL"
        }
      ]
    },
    {
      "id": 38,
      "icon": "fa:pen",
      "name": "n8n-nodes-base.set",
      "codex": {
        "data": {
          "alias": [
            "Set",
            "JS",
            "JSON",
            "Filter",
            "Transform",
            "Map"
          ],
          "resources": {
            "generic": [
              {
                "url": "https://n8n.io/blog/learn-to-automate-your-factorys-incident-reporting-a-step-by-step-guide/",
                "icon": "üè≠",
                "label": "Learn to Automate Your Factory's Incident Reporting: A Step by Step Guide"
              },
              {
                "url": "https://n8n.io/blog/2021-the-year-to-automate-the-new-you-with-n8n/",
                "icon": "‚òÄÔ∏è",
                "label": "2021: The Year to Automate the New You with n8n"
              },
              {
                "url": "https://n8n.io/blog/automatically-pulling-and-visualizing-data-with-n8n/",
                "icon": "üìà",
                "label": "Automatically pulling and visualizing data with n8n"
              },
              {
                "url": "https://n8n.io/blog/database-monitoring-and-alerting-with-n8n/",
                "icon": "üì°",
                "label": "Database Monitoring and Alerting with n8n"
              },
              {
                "url": "https://n8n.io/blog/automatically-adding-expense-receipts-to-google-sheets-with-telegram-mindee-twilio-and-n8n/",
                "icon": "üßæ",
                "label": "Automatically Adding Expense Receipts to Google Sheets with Telegram, Mindee, Twilio, and n8n"
              },
              {
                "url": "https://n8n.io/blog/no-code-ecommerce-workflow-automations/",
                "icon": "store",
                "label": "6 e-commerce workflows to power up your Shopify s"
              },
              {
                "url": "https://n8n.io/blog/how-to-build-a-low-code-self-hosted-url-shortener/",
                "icon": "üîó",
                "label": "How to build a low-code, self-hosted URL shortener in 3 steps"
              },
              {
                "url": "https://n8n.io/blog/automate-your-data-processing-pipeline-in-9-steps-with-n8n/",
                "icon": "‚öôÔ∏è",
                "label": "Automate your data processing pipeline in 9 steps"
              },
              {
                "url": "https://n8n.io/blog/how-to-get-started-with-crm-automation-and-no-code-workflow-ideas/",
                "icon": "üë•",
                "label": "How to get started with CRM automation (with 3 no-code workflow ideas"
              },
              {
                "url": "https://n8n.io/blog/5-tasks-you-can-automate-with-notion-api/",
                "icon": "‚ö°Ô∏è",
                "label": "5 tasks you can automate with the new Notion API "
              },
              {
                "url": "https://n8n.io/blog/automate-google-apps-for-productivity/",
                "icon": "üí°",
                "label": "15 Google apps you can combine and automate to increase productivity"
              },
              {
                "url": "https://n8n.io/blog/how-uproc-scraped-a-multi-page-website-with-a-low-code-workflow/",
                "icon": " üï∏Ô∏è",
                "label": "How uProc scraped a multi-page website with a low-code workflow"
              },
              {
                "url": "https://n8n.io/blog/building-an-expense-tracking-app-in-10-minutes/",
                "icon": "üì±",
                "label": "Building an expense tracking app in 10 minutes"
              },
              {
                "url": "https://n8n.io/blog/the-ultimate-guide-to-automate-your-video-collaboration-with-whereby-mattermost-and-n8n/",
                "icon": "üìπ",
                "label": "The ultimate guide to automate your video collaboration with Whereby, Mattermost, and n8n"
              },
              {
                "url": "https://n8n.io/blog/5-workflow-automations-for-mattermost-that-we-love-at-n8n/",
                "icon": "ü§ñ",
                "label": "5 workflow automations for Mattermost that we love at n8n"
              },
              {
                "url": "https://n8n.io/blog/learn-to-build-powerful-api-endpoints-using-webhooks/",
                "icon": "üß∞",
                "label": "Learn to Build Powerful API Endpoints Using Webhooks"
              },
              {
                "url": "https://n8n.io/blog/how-a-membership-development-manager-automates-his-work-and-investments/",
                "icon": "üìà",
                "label": "How a Membership Development Manager automates his work and investments"
              },
              {
                "url": "https://n8n.io/blog/a-low-code-bitcoin-ticker-built-with-questdb-and-n8n-io/",
                "icon": "üìà",
                "label": "A low-code bitcoin ticker built with QuestDB and n8n.io"
              },
              {
                "url": "https://n8n.io/blog/how-to-set-up-a-ci-cd-pipeline-with-no-code/",
                "icon": "üé°",
                "label": "How to set up a no-code CI/CD pipeline with GitHub and TravisCI"
              },
              {
                "url": "https://n8n.io/blog/benefits-of-automation-and-n8n-an-interview-with-hubspots-hugh-durkin/",
                "icon": "üéñ",
                "label": "Benefits of automation and n8n: An interview with HubSpot's Hugh Durkin"
              },
              {
                "url": "https://n8n.io/blog/how-goomer-automated-their-operations-with-over-200-n8n-workflows/",
                "icon": "üõµ",
                "label": "How Goomer automated their operations with over 200 n8n workflows"
              },
              {
                "url": "https://n8n.io/blog/aws-workflow-automation/",
                "label": "7 no-code workflow automations for Amazon Web Services"
              }
            ],
            "primaryDocumentation": [
              {
                "url": "https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.set/"
              }
            ]
          },
          "categories": [
            "Core Nodes"
          ],
          "nodeVersion": "1.0",
          "codexVersion": "1.0",
          "subcategories": {
            "Core Nodes": [
              "Data Transformation"
            ]
          }
        }
      },
      "group": "[\"input\"]",
      "defaults": {
        "name": "Edit Fields"
      },
      "iconData": {
        "icon": "pen",
        "type": "icon"
      },
      "displayName": "Edit Fields (Set)",
      "typeVersion": 3,
      "nodeCategories": [
        {
          "id": 9,
          "name": "Core Nodes"
        }
      ]
    },
    {
      "id": 350,
      "icon": "fa:server",
      "name": "n8n-nodes-base.ftp",
      "codex": {
        "data": {
          "alias": [
            "SFTP",
            "FTP",
            "Binary",
            "File",
            "Transfer"
          ],
          "resources": {
            "primaryDocumentation": [
              {
                "url": "https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.ftp/"
              }
            ],
            "credentialDocumentation": [
              {
                "url": "https://docs.n8n.io/integrations/builtin/credentials/ftp/"
              }
            ]
          },
          "categories": [
            "Core Nodes",
            "Data & Storage",
            "Development",
            "Utility"
          ],
          "nodeVersion": "1.0",
          "codexVersion": "1.0",
          "subcategories": {
            "Core Nodes": [
              "Files",
              "Helpers"
            ]
          }
        }
      },
      "group": "[\"input\"]",
      "defaults": {
        "name": "FTP",
        "color": "#303050"
      },
      "iconData": {
        "icon": "server",
        "type": "icon"
      },
      "displayName": "FTP",
      "typeVersion": 1,
      "nodeCategories": [
        {
          "id": 3,
          "name": "Data & Storage"
        },
        {
          "id": 5,
          "name": "Development"
        },
        {
          "id": 7,
          "name": "Utility"
        },
        {
          "id": 9,
          "name": "Core Nodes"
        }
      ]
    },
    {
      "id": 565,
      "icon": "fa:sticky-note",
      "name": "n8n-nodes-base.stickyNote",
      "codex": {
        "data": {
          "alias": [
            "Comments",
            "Notes",
            "Sticky"
          ],
          "categories": [
            "Core Nodes"
          ],
          "nodeVersion": "1.0",
          "codexVersion": "1.0",
          "subcategories": {
            "Core Nodes": [
              "Helpers"
            ]
          }
        }
      },
      "group": "[\"input\"]",
      "defaults": {
        "name": "Sticky Note",
        "color": "#FFD233"
      },
      "iconData": {
        "icon": "sticky-note",
        "type": "icon"
      },
      "displayName": "Sticky Note",
      "typeVersion": 1,
      "nodeCategories": [
        {
          "id": 9,
          "name": "Core Nodes"
        }
      ]
    },
    {
      "id": 839,
      "icon": "fa:clock",
      "name": "n8n-nodes-base.scheduleTrigger",
      "codex": {
        "data": {
          "alias": [
            "Time",
            "Scheduler",
            "Polling",
            "Cron",
            "Interval"
          ],
          "resources": {
            "generic": [],
            "primaryDocumentation": [
              {
                "url": "https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.scheduletrigger/"
              }
            ]
          },
          "categories": [
            "Core Nodes"
          ],
          "nodeVersion": "1.0",
          "codexVersion": "1.0"
        }
      },
      "group": "[\"trigger\",\"schedule\"]",
      "defaults": {
        "name": "Schedule Trigger",
        "color": "#31C49F"
      },
      "iconData": {
        "icon": "clock",
        "type": "icon"
      },
      "displayName": "Schedule Trigger",
      "typeVersion": 1,
      "nodeCategories": [
        {
          "id": 9,
          "name": "Core Nodes"
        }
      ]
    },
    {
      "id": 844,
      "icon": "fa:filter",
      "name": "n8n-nodes-base.filter",
      "codex": {
        "data": {
          "alias": [
            "Router",
            "Filter",
            "Condition",
            "Logic",
            "Boolean",
            "Branch"
          ],
          "details": "The Filter node can be used to filter items based on a condition. If the condition is met, the item will be passed on to the next node. If the condition is not met, the item will be omitted. Conditions can be combined together by AND(meet all conditions), or OR(meet at least one condition).",
          "resources": {
            "generic": [],
            "primaryDocumentation": [
              {
                "url": "https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.filter/"
              }
            ]
          },
          "categories": [
            "Core Nodes"
          ],
          "nodeVersion": "1.0",
          "codexVersion": "1.0",
          "subcategories": {
            "Core Nodes": [
              "Flow",
              "Data Transformation"
            ]
          }
        }
      },
      "group": "[\"transform\"]",
      "defaults": {
        "name": "Filter",
        "color": "#229eff"
      },
      "iconData": {
        "icon": "filter",
        "type": "icon"
      },
      "displayName": "Filter",
      "typeVersion": 2,
      "nodeCategories": [
        {
          "id": 9,
          "name": "Core Nodes"
        }
      ]
    }
  ],
  "categories": [
    {
      "id": 36,
      "name": "File Management"
    },
    {
      "id": 51,
      "name": "Multimodal AI"
    }
  ],
  "image": []
}